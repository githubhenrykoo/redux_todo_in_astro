name: Build Status Checking Service Docker Image

on:
  push:
    branches: 
      - main
      - develop
    tags:
      - 'status-v*'
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: henry768/status-checking-service
  
jobs:
  build-and-push:
    name: Build and Push Status Checking Service Docker image
    runs-on: ubuntu-latest
    environment: docker
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:latest
    
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},prefix=status-
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=status-
      
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: henry768
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./status_checking
          file: ./status_checking/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TELEGRAM_WEBSITE_URL=${{ secrets.TELEGRAM_WEBSITE_URL }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
          
      - name: Image digest
        run: echo "Image built successfully"
