name: Markdown to PDF Converter

on:
  workflow_dispatch:
    inputs:
      markdown_file:
        description: 'Docs/analysis/[test][report]2025-02-22.md'
        required: true
        type: string
        default: 'README.md'

jobs:
  convert-to-pdf:
    runs-on: ubuntu-latest
    environment: LLM_API_KEY

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-fonts-recommended texlive-latex-extra
        pip install google-generativeai
        pip install python-dotenv

    - name: Convert MD to PDF
      env:
        GOOGLE_API_KEY: "AIzaSyBZ52gRnYBjfyyh4jiEWscKoRfTx-j4YEQ"
      run: |
        # Create Python script for conversion
        cat << 'EOF' > convert_md_to_pdf.py
        import os
        import google.generativeai as genai
        import subprocess

        # Configure Gemini
        api_key = os.getenv('GOOGLE_API_KEY')
        if not api_key:
            raise ValueError("GOOGLE_API_KEY not set")

        genai.configure(api_key=api_key)
        model = genai.GenerativeModel('gemini-pro')

        def md_to_latex(md_content):
            prompt = f"""
              You are a LaTeX document formatter. Convert the following structured Markdown content into a properly formatted LaTeX document. Ensure the following:

              - Do not use ```latex ``` or any similar code block delimiters.
              - Use the appropriate document class, title, and sections.
              - [!IMPORTANT] Correctly format bold text, italic text, etc. (** --> \textbf, * --> \textit)
              - Correctly format tables, numbering, bullet points, and code blocks.
              - Maintain the full content without reduction.
              - Convert mermaid graphs into TikZ pictures using the specified styles in vertical style ("below of"):

              % Custom styles for all diagrams
                  \tikzset{{
                      block/.style={{
                          rectangle,
                          draw=darkblue,
                          text width=7em,
                          text centered,
                          rounded corners,
                          minimum height=2em,
                          fill=lightgray!10,
                          font=\small
                      }},
                      process/.style={{
                          rectangle,
                          draw=forestgreen,
                          text width=6em,
                          text centered,
                          rounded corners,
                          fill=lightgray!30,
                          minimum height=2em,
                          font=\small
                      }},
                      line/.style={{
                          draw,
                          -latex',
                          font=\footnotesize
                      }},
                      cloud/.style={{
                          draw,
                          ellipse,
                          minimum width=2cm,
                          minimum height=1cm,
                          fill=lightgray!20
                      }},
                      state/.style={{
                          rectangle,
                          draw=uiblue,
                          text width=8em,
                          text centered,
                          rounded corners,
                          fill=uiblue!10,
                          minimum height=2.5em,
                          font=\small
                      }}
                  }}
                  - note the color rgb format:
                      - lightgray, RGB(240,240,240)
                      - darkblue, RGB(0,0,139)
                      - forestgreen, RGB(34,139,34)
                      - uiblue, RGB(66,139,202)
                  - Use “Docs/to-do-plan/docs/reports/daily/2025-02/[report]2025-02-19.tex” as a reference for the TikZ picture structure.

              Markdown Content:
              {markdown_content}
            """

            response = model.generate_content(prompt)
            return response.text

        def create_pdf(latex_content, output_name):
            # Write LaTeX content to file
            with open(f"{output_name}.tex", "w") as f:
                f.write(latex_content)

            # Run pdflatex twice to resolve references
            subprocess.run(['pdflatex', f"{output_name}.tex"])
            subprocess.run(['pdflatex', f"{output_name}.tex"])

        # Read input markdown file
        md_file = "${{ github.event.inputs.markdown_file }}"
        output_name = os.path.splitext(md_file)[0]

        with open(md_file, 'r') as f:
            md_content = f.read()

        # Convert to LaTeX
        latex_content = md_to_latex(md_content)

        # Create PDF
        create_pdf(latex_content, output_name)
        EOF

        # Run the conversion script
        python convert_md_to_pdf.py

    - name: Upload PDF artifact
      uses: actions/upload-artifact@v4  # Updated from v3 to v4
      with:
        name: converted-pdf
        path: "*.pdf"

    - name: Commit PDF
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add "*.pdf"
        git commit -m "docs: convert markdown to PDF" || echo "No changes to commit"
        git push origin HEAD:main