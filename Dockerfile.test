# Stage 1: Build environment
FROM node:20-bullseye AS builder

WORKDIR /app

# Install build dependencies
COPY package*.json ./
RUN npm install && \
    npm install marked pdfjs-dist@5.1.91 serve

# Create temp directory for PDF files
RUN mkdir -p /tmp/pdf-files/

# First copy the PDF files - use a different approach without wildcards
COPY public/data/ /tmp/pdf-files/

# Copy the rest of the application
COPY . .

# Create directory for PDF.js worker
RUN mkdir -p public/assets

# Copy PDF.js worker files to public/assets for proper loading
RUN cp -r node_modules/pdfjs-dist/build/pdf.worker.* public/assets/

# Create directory structure for PDF access
RUN mkdir -p public/data
RUN mkdir -p /data

# Copy the PDF files to their intended locations
RUN cp -f /tmp/pdf-files/*.pdf public/ || echo "No PDF files found in /tmp"
RUN cp -f /tmp/pdf-files/*.pdf public/data/ || echo "No PDF files found in /tmp"

# Build the application for production
ENV NODE_OPTIONS="--max_old_space_size=4096"
RUN npm run build

# Stage 2: Production environment
FROM node:20-alpine AS production

WORKDIR /app

# Install serve for static file hosting
RUN npm install -g serve

# Copy build output and necessary files from builder
COPY --from=builder /app/dist /app/dist
COPY --from=builder /app/public /app/public

# Create directory structure for PDF access in production image
RUN mkdir -p /data
RUN ln -sf /app/public/data/* /data/ || echo "No data files to link"

# Verify files exist
RUN ls -la /app/public/assets/pdf.worker.* || echo "No PDF.js worker files"
RUN ls -la /app/dist || echo "No dist directory"

EXPOSE 4321

# Use serve to host the static files
CMD ["serve", "-s", "dist", "-l", "4321"]
