# Use Node.js v18 Alpine as the base image
FROM node:18-alpine

# Add non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 astro

# Set working directory
WORKDIR /app

# Install build dependencies for native modules
RUN apk add --no-cache python3 make g++ python3-dev py3-setuptools sqlite sqlite-dev bash

# Copy package files
COPY package.json package-lock.json* ./

# Install dependencies
RUN npm ci

# Copy application code
COPY . .

# Create the directories
RUN mkdir -p /app/src/lib/authentik/
RUN mkdir -p /app/src/components/panels/

# Copy fixed files
COPY docker-build/authentik-client.js /app/src/lib/authentik/client.js
COPY docker-build/K8sTopBar.tsx /app/src/components/panels/K8sTopBar.tsx
COPY docker-build/astro.config.docker.mjs /app/astro.config.docker.mjs
COPY docker-build/docker-entrypoint.sh /app/docker-entrypoint.sh

# Update DefaultLayout to use K8sTopBar
RUN sed -i "s/import TopBar from .*$/import TopBar from \"\.\.\/components\/panels\/K8sTopBar\";/g" /app/src/layouts/DefaultLayout.astro || true

# Make the entrypoint script executable
RUN chmod +x /app/docker-entrypoint.sh

# Create necessary directories and set permissions
RUN mkdir -p /app/.astro && \
    chown -R astro:nodejs /app && \
    chmod -R 755 /app

# Switch to non-root user
USER astro

# Set environment variables
ENV NODE_ENV=development
ENV HOST=0.0.0.0
ENV PORT=4321
ENV ASTRO_TELEMETRY_DISABLED=1
ENV IS_KUBERNETES=true
ENV VITE_HMR_PROTOCOL=ws
ENV VITE_HMR_HOST=0.0.0.0
ENV VITE_HMR_PORT=24678
ENV VITE_HMR_CLIENT_PORT=24678
ENV THEME_DEFAULT=dark

# Use our custom entrypoint script
ENTRYPOINT ["/app/docker-entrypoint.sh"]
