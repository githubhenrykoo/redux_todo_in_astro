FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install build dependencies for native modules including SQLite
RUN apk add --no-cache python3 make g++ python3-dev py3-setuptools sqlite sqlite-dev

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* ./
RUN npm ci

# Create build image
FROM base AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Modify astro.config.mjs to use static output
RUN sed -i 's/output: "server",/output: "static",/' astro.config.mjs

# Build the application with nocheck to bypass TypeScript errors
RUN npm run build:nocheck

# Production image, copy all the files and run static server
FROM base AS runner
WORKDIR /app

# Create a lightweight user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 astro

# Install serve for static file serving
RUN npm install -g serve

# Copy built application (static output)
COPY --from=builder /app/dist/client ./dist

# Switch to non-root user
USER astro

# Expose port
EXPOSE 4321

# Environment variables
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=4321
ENV ASTRO_TELEMETRY_DISABLED=1

# Start the static file server
CMD ["serve", "-s", "dist", "-l", "4321"]
