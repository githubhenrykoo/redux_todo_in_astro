FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install build dependencies for native modules including SQLite
RUN apk add --no-cache python3 make g++ python3-dev py3-setuptools sqlite sqlite-dev

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* ./
RUN npm ci

# Build stage
FROM base AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# We're keeping the app in development mode since it's configured for SSR
# and doesn't have a static adapter installed

# Create runner image
FROM base AS runner
WORKDIR /app

# Create a lightweight user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 astro

# Copy the entire app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Create the .astro directory with proper permissions
RUN mkdir -p /app/.astro && \
    chown -R astro:nodejs /app && \
    chmod -R 755 /app

# Switch to non-root user
USER astro

# Expose ports - both HTTP and WebSocket
EXPOSE 4321 24678

# Environment variables
ENV NODE_ENV=development
ENV HOST=0.0.0.0
ENV PORT=4321
ENV ASTRO_TELEMETRY_DISABLED=1

# Add Vite specific configurations for external access
ENV VITE_HMR_PROTOCOL=ws
ENV VITE_HMR_HOST=0.0.0.0
ENV VITE_HMR_PORT=24678
ENV VITE_HMR_CLIENT_PORT=24678

# Start the development server with appropriate flags
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
