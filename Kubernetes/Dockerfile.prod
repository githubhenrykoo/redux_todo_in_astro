FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install build dependencies for native modules including SQLite
RUN apk add --no-cache python3 make g++ python3-dev py3-setuptools sqlite sqlite-dev

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* ./
RUN npm ci

# Create build image
FROM base AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# We're not building the app, just running it in dev mode
# No need to modify astro.config.mjs

# Create runner image (same as builder since we're not building)
FROM base AS runner
WORKDIR /app

# Create a lightweight user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 astro

# Copy the entire app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Switch to non-root user
USER astro

# Expose port
EXPOSE 4321

# Environment variables
ENV NODE_ENV=development
ENV HOST=0.0.0.0
ENV PORT=4321
ENV ASTRO_TELEMETRY_DISABLED=1

# Add Vite specific configurations for external access
ENV VITE_HMR_PROTOCOL=ws
ENV VITE_HMR_HOST=0.0.0.0
ENV VITE_HMR_PORT=24678
ENV VITE_HMR_CLIENT_PORT=24678

# Start the development server with appropriate flags
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
