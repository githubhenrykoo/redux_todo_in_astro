FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install build dependencies for native modules including SQLite
RUN apk add --no-cache python3 make g++ python3-dev py3-setuptools sqlite sqlite-dev

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* ./
RUN npm ci

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Disable Astro telemetry
ENV ASTRO_TELEMETRY_DISABLED=1

# Build the application with static output mode
# We use the astro config we modified to output: 'static'
RUN npm run build:nocheck || (echo "Build failed but continuing to use what was built" && ls -la dist)

# Production image, copy all the files and run a basic server
FROM nginx:alpine AS runner
WORKDIR /usr/share/nginx/html

# Remove default nginx static assets
RUN rm -rf ./*

# Copy static files from builder stage
COPY --from=builder /app/dist .
# Copy nginx config
COPY Kubernetes/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
