---
// src/layouts/ReactLayout.astro 
import { Provider } from 'react-redux';
import { store } from '../store';
import { initStateObserver } from '../utils/stateWatcher';
import { initializeDatabase } from '../utils/dbInitializer';
import type { RootState } from '../types/store';
import type { Action } from '@reduxjs/toolkit';

// Initialize database and state observer only in development
if (import.meta.env.DEV) {
  // Initialize database first
  initializeDatabase();

  // Then initialize state observer
  const stateObserver = initStateObserver(store, {
    // Optional: Only capture specific slice states
    shouldCapture: (state: RootState, action: Action | null) => {
      // Capture all actions for now
      return true;
    },
    
    // Optional: Transform state before storing
    transformState: (state: RootState) => {
      // You can modify/filter state here if needed
      return {
        // Only capture specific slices
        theme: state.theme,
        user: state.user,
        panellayout: state.panellayout,
        // Add other slices as needed
      };
    },

    // Custom endpoint if needed
    endpoint: '/api/state-capture',

    // Adjust debounce time
    debounceTime: 1000
  });

  // Optional: Attach to window for debugging
  if (typeof window !== 'undefined') {
    (window as any).stateObserver = stateObserver;
  }
}

interface Props {
  children: any;
}

const { children } = Astro.props;
---
<html>   
	<body>     
		<main>       
			<Provider store={store} client:load>
				<slot />
			</Provider>     
		</main>     
		<aside>       
			<slot name="sidebar" />     
		</aside>   
	</body> 
</html>