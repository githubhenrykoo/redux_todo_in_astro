---
const code = Astro.url.searchParams.get('code');
const state = Astro.url.searchParams.get('state');

let error = '';

if (code) {
  try {
    // Get credentials from environment variables
    const clientId = import.meta.env.PUBLIC_NOTION_CLIENT_ID;
    const clientSecret = import.meta.env.PUBLIC_NOTION_CLIENT_SECRET;

    // Debug: Log environment variable presence (not values)
    console.log('Environment variables check:', {
      hasClientId: !!clientId,
      hasClientSecret: !!clientSecret,
      envKeys: Object.keys(import.meta.env)
    });

    if (!clientId || !clientSecret) {
      throw new Error('Missing Notion credentials. Please check your .env file');
    }

    // Create authorization string with proper encoding
    const credentials = `${clientId}:${clientSecret}`;
    const authString = Buffer.from(credentials).toString('base64');
    
    console.log('Starting OAuth token exchange...');
    console.log('Authorization code length:', code?.length);
    console.log('Using redirect URI:', 'http://localhost:4321/auth/notion/callback');

    const response = await fetch('https://api.notion.com/v1/oauth/token', {
      method: 'POST',
      headers: {
        'Authorization': `Basic ${authString}`,
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Notion-Version': '2022-06-28'
      },
      body: JSON.stringify({
        grant_type: 'authorization_code',
        code: code,
        redirect_uri: 'http://localhost:4321/auth/notion/callback'
      })
    });

    if (!response.ok) {
      const errorText = await response.text();
      let errorJson;
      try {
        errorJson = JSON.parse(errorText);
      } catch (e) {
        errorJson = null;
      }

      console.error('Token exchange failed:', {
        status: response.status,
        statusText: response.statusText,
        error: errorJson || errorText,
        headers: Object.fromEntries(response.headers.entries())
      });

      // More descriptive error message
      const errorDetail = errorJson ? `${errorJson.error}: ${errorJson.error_description || ''}` : errorText;
      throw new Error(`Token exchange failed (${response.status}): ${errorDetail}`);
    }

    const data = await response.json();
    if (!data.access_token) {
      throw new Error('No access token received');
    }

    // Redirect to the success page with token data
    return Astro.redirect(`/auth/notion/success?access_token=${data.access_token}&workspace_id=${data.workspace_id}&workspace_name=${encodeURIComponent(data.workspace_name)}`);
  } catch (err) {
    console.error('OAuth error:', err);
    error = err.message;
  }
}
---

<!DOCTYPE html>
<html>
<head>
  <title>Notion OAuth Callback</title>
</head>
<body>
  {error ? (
    <div style="color: #e74c3c; padding: 20px; margin: 20px; background-color: #fadbd8; border-radius: 4px;">
      ⚠️ {error}
    </div>
  ) : (
    <div style="text-align: center; padding: 20px;">
      <p>Processing authentication...</p>
    </div>
  )}
</body>
</html>
