---
import Layout from '../layouts/BaseLayout.astro';
---

<Layout title="Authentication Callback">
  <div class="min-h-screen flex items-center justify-center">
    <div class="text-center">
      <h1 class="text-2xl font-semibold mb-4">Processing Authentication...</h1>
      <p class="text-gray-600">You will be redirected back automatically.</p>
    </div>
  </div>

  <script>
    // Function to handle the authentication callback
    async function handleAuthCallback() {
      try {
        // Extract the authorization code from the URL
        const urlParams = new URLSearchParams(window.location.search);
        const code = urlParams.get('code');

        if (!code) {
          console.error('No authorization code found');
          return;
        }

        // Import the Authentik client dynamically
        const { createClient } = await import('../lib/authentik/client');

        // Create the Authentik client with the same configuration used in TopBar
        const client = createClient({
          clientId: import.meta.env.PUBLIC_AUTHENTIK_CLIENT_ID || '',
          redirectUri: `${window.location.origin}/callback`,
          scopes: import.meta.env.PUBLIC_AUTHENTIK_SCOPES || 'openid profile email',
          baseUrl: import.meta.env.PUBLIC_AUTHENTIK_URL || '',
          storageKey: `${import.meta.env.PUBLIC_AUTHENTIK_STORAGE_KEY_PREFIX || 'authentik_'}top_banner_auth`,
        });

        // Handle the callback
        await client.handleCallback(code);
      } catch (error) {
        console.error('Authentication callback failed:', error);
        // Fallback redirect if something goes wrong
        window.location.href = '/';
      }
    }

    // Run the callback handler when the page loads
    handleAuthCallback();
  </script>
</Layout>
