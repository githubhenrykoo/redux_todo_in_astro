---
// No imports needed in the frontmatter for client-side libraries
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Welcome to PKC</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
  <!-- No external animation libraries needed -->
</head>
<body>
  <div class="container">
    <div class="content">
      <div class="logo-container">
        <div class="logo">To-Do App</div>
      </div>
      
      <a href="/Page" class="enter-button" id="enterButton">Push Me</a>
      <p id="countdown" class="countdown-text">Or I will push myself in 10 seconds.</p>
    </div>
  </div>

  <script>
    // Wait for DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', () => {
      let timeLeft = 10;
      const countdownElement = document.getElementById('countdown');
      
      // Animation function for countdown text using CSS classes
      function animateCountdown(newText) {
        // Add fade-out class
        countdownElement.classList.add('fade-out');
        
        // After fade out completes, update text and fade back in
        setTimeout(() => {
          countdownElement.textContent = newText;
          countdownElement.classList.remove('fade-out');
          countdownElement.classList.add('fade-in');
          
          // Remove the fade-in class after animation completes
          setTimeout(() => {
            countdownElement.classList.remove('fade-in');
          }, 600);
        }, 300);
      }
      
      // Start the countdown
      const countdown = setInterval(() => {
        timeLeft--;
        
        if (timeLeft <= 0) {
          clearInterval(countdown);
          
          // Final animation before redirect
          countdownElement.classList.add('fade-out-final');
          
          // Redirect after animation completes
          setTimeout(() => {
            window.location.href = '/Pagedemo';
          }, 500);
        } else {
          const newText = `Or I will push myself in ${timeLeft} ${timeLeft === 1 ? 'second.' : 'seconds.'}`;
          animateCountdown(newText);
        }
      }, 1000);

      // Handle button click
      document.getElementById('enterButton').addEventListener('click', () => {
        clearInterval(countdown);
        
        // Button press animation using CSS
        const button = document.getElementById('enterButton');
        button.classList.add('button-press');
        
        // Redirect after animation completes
        setTimeout(() => {
          window.location.href = '/Pagedemo';
        }, 300);
      });
    });
  </script>
  <style>
    /* Animation styles */
    .countdown-text {
      margin-top: 10px;
      color: rgb(75 85 99 / var(--tw-text-opacity, 1));
      font-size: 20px;
      opacity: 1;
      transition: opacity 0.3s ease, transform 0.3s ease;
    }
    
    .fade-out {
      opacity: 0;
      transform: translateY(-10px);
    }
    
    .fade-in {
      opacity: 1;
      transform: translateY(0);
      transition: opacity 0.6s ease, transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
    
    .fade-out-final {
      opacity: 0;
      transform: translateY(-20px) scale(0.8);
      transition: opacity 0.5s ease, transform 0.5s ease;
    }
    
    .button-press {
      transform: scale(0.95);
      transition: transform 0.3s ease;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background: #e5e7eb;
      color: rgb(75 85 99 / var(--tw-text-opacity, 1));
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .container {
      width: 100%;
      max-width: 1000px;
      padding: 40px 20px;
    }
    
    .content {
      background: white;
      border-radius: 16px;
      padding: 60px 40px;
      text-align: center;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba(0, 0, 0, 0.1);
    }
    
    .logo-container {
      display: flex;
      justify-content: center;
      margin-bottom: 30px;
    }
    
    .logo {
      font-size: 48px;
      font-weight: 700;
      color: white;
      background: linear-gradient(135deg, #00c6ff, #0072ff);
      border-radius: 16px;
      width: 170px;
      height: 140px;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 10px 20px rgba(0, 114, 255, 0.3);
      border: none;
    }
    
    h1 {
      font-size: 36px;
      margin-bottom: 16px;
      font-weight: 700;
      color: rgb(75 85 99 / var(--tw-text-opacity, 1));
    }
    
    .subtitle {
      font-size: 18px;
      color: rgb(75 85 99 / var(--tw-text-opacity, 1));
      margin-bottom: 50px;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }
    
    .features {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 30px;
      margin-bottom: 50px;
    }
    
    .feature {
      padding: 20px;
      border-radius: 12px;
      background: white;
      border: 1px solid rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .feature:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
    
    .feature-icon {
      font-size: 32px;
      margin-bottom: 16px;
    }
    
    .feature h3 {
      font-size: 18px;
      margin-bottom: 10px;
      font-weight: 600;
    }
    
    .feature p {
      color: rgb(75 85 99 / var(--tw-text-opacity, 1));
      font-size: 14px;
    }
    
    .feature p a {
      color: inherit;  /* Menggunakan warna yang sama dengan parent element */
      text-decoration: none; /* Menghilangkan garis bawah default */
      cursor: pointer; /* Menunjukkan bahwa ini masih bisa diklik */
    }
    
    .feature p a:hover {
      opacity: 0.8; /* Memberikan sedikit efek hover tanpa mengubah warna */
    }
    
    .enter-button {
      display: inline-block;
      background: linear-gradient(135deg, #00c6ff, #0072ff);
      color: white;
      font-weight: 700;
      font-size: 30px;
      padding: 30px 70px;
      border-radius: 60px;
      text-decoration: none;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      margin-top: 30px;
      margin-bottom: 27px;
      box-shadow: 0 10px 20px rgba(0, 114, 255, 0.3);
    }
    
    .enter-button:hover {
      transform: translateY(-3px);
      box-shadow: 0 12px 30px rgba(0, 114, 255, 0.4);
    }
    
    @media (max-width: 768px) {
      .content {
        padding: 40px 20px;
      }
      
      h1 {
        font-size: 28px;
      }
      
      .subtitle {
        font-size: 16px;
      }
      
      .features {
        grid-template-columns: 1fr;
      }
    }
  </style>
</body>
</html>
